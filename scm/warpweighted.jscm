;; -*- mode: scheme; -*-

(load "flx/scm/fluxus.jscm")
(load "flx/scm/canvas.jscm")
(load "scm/loom.jscm")
(load "scm/interface.jscm")
(load "scm/draft-generators.jscm")

;;---------------------------------------------------------

(define l 0)
(define components (init-components))
(define scene-root 0)
(define frame 0)
  
(define (build)  
  (set! scene-root (build-locator))
  
  (setup-draft-interface
   (read-number "warp-threads")
   (read-number "weft-threads"))

  (update-look)  
  (update-view)
  
  (with-state
   (parent scene-root)
   (set! l (build-loom
	    (read-draft-interface)
	    (read-number "fabric-warp-size")
	    (make-even (read-number "fabric-weft-size"))))))
  
(define (update)
  (destroy scene-root)
  (build))

(define (update-look)
  (build-components
   components
   (read-number "weave-depth")
   (read-number "thread-width")
   (is-checked? "render-texture")
   (is-checked? "render-flat")))
  
(define (update-view)
  (with-primitive
   scene-root
   (identity)
   (translate (vector -10 5 0))
   (rotate
     (vector
      (read-number "camera-rot-x")
      (read-number "camera-rot-y") 0))))

(define (generate-draft)  
  (write-draft-interface
   (generate (read-selected "preset"))))

(define (invert-draft)  
  (let ((draft (kernel-invert (loom-draft l))))
    (write-draft-interface draft)
    ;;(set! l (loom-modify-draft l draft))
    ))

(define (render)
  (with-state
   (parent scene-root)
   ;; todo: instances don't seem to inherit texture state...
   (texture (load-texture
	     (if (is-checked? "render-texture")
		 "thread.png" "white.png")))
   (set! l (loom-update l (/ 1 120) components)))
  (with-primitive
   scene-root
   (rotate (vector 0 0 0)))
  (set! frame (+ frame 1)))

(canvas-setup)
(set-camera-angle 25)
(set-camera-transform (mtranslate (midentity) (vector 0 0 -38)))
(resize-glcanvas webgl-canvas)

(shader-compile "default" (list "p" "n" "t" "c")
		"shaders/default.vert"
		"shaders/default.frag")

(build)
(every-frame (render))



